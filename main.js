(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>i});var r=t(354),o=t.n(r),a=t(314),c=t.n(a)()(o());c.push([n.id,"* {\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  height: 100vh;\n  display: grid;\n  grid-template-rows: 80px 1fr;\n}\n\nheader {\n  background-color: rgb(29, 29, 29);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  color: white;\n}\n\n.header {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n}\n\n.app-icon {\n  height: 50px;\n}\n\n.btn-search {\n  padding: 10px;\n  border-style: none;\n  background-color: rgb(27, 27, 27);\n  color: white;\n  border-radius: 5px;\n}\n\nmain {\n  display: grid;\n  grid-template-rows: 80px 1fr;\n  background-color: aliceblue;\n}\n\n.search-box {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin: 20px;\n}\n\n#location {\n  padding: 10px;\n}\n\n.display-box {\n  display: grid;\n  grid-auto-rows: min-content;\n  grid-template-columns: 1fr;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n}\n\nspan {\n  text-align: center;\n}\n\n.icon-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.location {\n  font-size: 3rem;\n}\n\n.wind {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n}\n.temp-c,\n.temp-f {\n  font-size: 7rem;\n  font-weight: bold;\n  cursor: pointer;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;AACX;;AAEA;EACE,aAAa;EACb,aAAa;EACb,4BAA4B;AAC9B;;AAEA;EACE,iCAAiC;EACjC,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,YAAY;AACd;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,iCAAiC;EACjC,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,4BAA4B;EAC5B,2BAA2B;AAC7B;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,SAAS;EACT,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,2BAA2B;EAC3B,0BAA0B;EAC1B,SAAS;EACT,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,SAAS;AACX;AACA;;EAEE,eAAe;EACf,iBAAiB;EACjB,eAAe;AACjB",sourcesContent:["* {\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  height: 100vh;\n  display: grid;\n  grid-template-rows: 80px 1fr;\n}\n\nheader {\n  background-color: rgb(29, 29, 29);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  color: white;\n}\n\n.header {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n}\n\n.app-icon {\n  height: 50px;\n}\n\n.btn-search {\n  padding: 10px;\n  border-style: none;\n  background-color: rgb(27, 27, 27);\n  color: white;\n  border-radius: 5px;\n}\n\nmain {\n  display: grid;\n  grid-template-rows: 80px 1fr;\n  background-color: aliceblue;\n}\n\n.search-box {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin: 20px;\n}\n\n#location {\n  padding: 10px;\n}\n\n.display-box {\n  display: grid;\n  grid-auto-rows: min-content;\n  grid-template-columns: 1fr;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n}\n\nspan {\n  text-align: center;\n}\n\n.icon-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.location {\n  font-size: 3rem;\n}\n\n.wind {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n}\n.temp-c,\n.temp-f {\n  font-size: 7rem;\n  font-weight: bold;\n  cursor: pointer;\n}\n"],sourceRoot:""}]);const i=c},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var A=0;A<n.length;A++){var p=[].concat(n[A]);r&&c[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),e.push(p))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},c=[],i=0;i<n.length;i++){var s=n[i],A=r.base?s[0]+r.base:s[0],p=a[A]||0,l="".concat(A," ").concat(p);a[A]=p+1;var d=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var f=o(u,r);r.byIndex=i,e.splice(i,0,{identifier:l,updater:f,references:1})}c.push(l)}return c}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var c=0;c<a.length;c++){var i=t(a[c]);e[i].references--}for(var s=r(n,o),A=0;A<a.length;A++){var p=t(a[A]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}a=s}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(72),e=t.n(n),r=t(825),o=t.n(r),a=t(659),c=t.n(a),i=t(56),s=t.n(i),A=t(540),p=t.n(A),l=t(113),d=t.n(l),u=t(208),f={};f.styleTagTransform=d(),f.setAttributes=s(),f.insert=c().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=p(),e()(u.A,f),u.A&&u.A.locals&&u.A.locals;const m=t.p+"040afc192e887760d221.png",g=n=>{const e=document.querySelector(".display-box");e.textContent="";const t=document.createElement("span");t.classList.toggle("location");const r=document.createElement("span");r.classList.toggle("temperature");const o=document.createElement("span");o.classList.toggle("temp-c");const a=document.createElement("span");a.classList.toggle("temp-f");const c=document.createElement("span");c.classList.toggle("wind");const i=document.createElement("span");i.classList.toggle("wind-kph");const s=new Image;s.src=m;const A=document.createElement("span");A.classList.toggle("condition");const p=document.createElement("div");p.classList.toggle("icon-container");const l=document.createElement("img");l.classList.toggle("condition-icon"),t.textContent=`${n.city}, ${n.country}`,o.textContent=`${n.temp_c} °C`,a.textContent=`${n.temp_f} °F`,i.textContent=` Wind speed is ${n.wind_kph} kph`,A.textContent=n.condition,l.src=n.icon,e.appendChild(t),p.appendChild(l),e.appendChild(p),r.appendChild(o),e.appendChild(r),p.appendChild(A),c.appendChild(s),c.appendChild(i),e.appendChild(c),o.addEventListener("click",(()=>{r.textContent="",r.appendChild(a)})),a.addEventListener("click",(()=>{r.textContent="",r.appendChild(o)}))},C=async function(n){try{const e=await async function(n){try{const e="f6a31bc29e5349c896785531242502",t=await fetch(`https://api.weatherapi.com/v1/current.json?key=${e}&q=${n}`);return await t.json()}catch(n){alert(n)}}(n);return JSON.parse(`{"country":"${e.location.country}",\n      "city":"${e.location.name}",\n      "temp_c":"${e.current.temp_c}",\n      "temp_f":"${e.current.temp_f}",\n      "feelslike_c":"${e.current.feelslike_c}",\n      "wind_kph":"${e.current.wind_kph}",\n      "condition":"${e.current.condition.text}",\n      "icon":"${e.current.condition.icon}"\n    }`)}catch(n){alert("Wrong city name")}},E=t.p+"c5c393a71bc896164065.png",h=document.querySelector("header"),y=new Image;y.src=E,y.classList.toggle("app-icon"),h.appendChild(y);const v=document.querySelector(".btn-search"),b=document.querySelector("#location");v.addEventListener("click",(async()=>{const n=await C(`${b.value}`);g(n)})),(async()=>{const n=await C("Moscow");g(n)})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,